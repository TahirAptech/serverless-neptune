service: lillup-vpc

provider:
  name: aws
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'eu-west-2'}
  profile: lillup

resources:
  Resources:
    Vpc:
      Type: AWS::EC2::VPC
      Properties:
          CidrBlock: 10.0.0.0/16
          EnableDnsSupport: 'true'
          EnableDnsHostnames: 'true'
          InstanceTenancy: 'default'
          Tags:
            - Key: Name
              Value: ${self:custom.prefix}

    PrivateSubnet1:
      Type: AWS::EC2::Subnet
      Properties:
        VpcId:
          Ref: Vpc
        CidrBlock: 10.0.1.0/24
        AvailabilityZone:
          Fn::Select: 
            - 0
            - Fn::GetAZs: ""
        Tags:
          - Key: Name
            Value: ${self:custom.prefix}-private-subnet-1

    PublicSubnet1:
      Type: AWS::EC2::Subnet
      Properties:
        VpcId: 
          Ref: Vpc
        CidrBlock: 10.0.2.0/24
        AvailabilityZone:
          Fn::Select: 
            - 0
            - Fn::GetAZs: ""
        Tags:
          - Key: Name
            Value: ${self:custom.prefix}-public-subnet-1

    PrivateSubnet2:
      Type: AWS::EC2::Subnet
      Properties:
        VpcId: 
          Ref: Vpc
        CidrBlock: 10.0.3.0/24
        AvailabilityZone:
          Fn::Select: 
            - 1
            - Fn::GetAZs: ""
        Tags:
          - Key: Name
            Value: ${self:custom.prefix}-private-subnet-2


    PublicSubnet2:
      Type: AWS::EC2::Subnet
      Properties:
        VpcId: 
          Ref: Vpc
        CidrBlock: 10.0.4.0/24
        AvailabilityZone:
          Fn::Select: 
            - 1
            - Fn::GetAZs: ""
        Tags:
          - Key: Name
            Value: ${self:custom.prefix}-public-subnet-2
      
    InternetGateway:
      Type: AWS::EC2::InternetGateway
      Properties:
        Tags:
        - Key: Name
          Value: ${self:custom.prefix}-igw

    AttachGateway:
      Type: "AWS::EC2::VPCGatewayAttachment"
      Properties: 
        InternetGatewayId:
          Ref: InternetGateway
        VpcId:
          Ref: Vpc

    PublicRouteTable:
      Type: AWS::EC2::RouteTable
      Properties:
        VpcId:
          Ref: Vpc
        Tags:
          - Key: Name
            Value: ${self:custom.prefix}-public-route-table

    PrivateRouteTable:
      Type: AWS::EC2::RouteTable
      Properties:
        VpcId:
          Ref: Vpc
        Tags:
          - Key: Name
            Value: ${self:custom.prefix}-private-route-table

    DefaultPublicRoute:
      Type: AWS::EC2::Route
      Properties:
        RouteTableId:
          Ref: PublicRouteTable
        DestinationCidrBlock: 0.0.0.0/0
        GatewayId:
          Ref: InternetGateway

    PublicSubnet1RouteTableAssociation:
      Type: AWS::EC2::SubnetRouteTableAssociation
      Properties:
        RouteTableId:
          Ref: PublicRouteTable
        SubnetId:
          Ref: PublicSubnet1
  
    PublicSubnet2RouteTableAssociation:
      Type: AWS::EC2::SubnetRouteTableAssociation
      Properties:
        RouteTableId:
          Ref: PublicRouteTable
        SubnetId:
          Ref: PublicSubnet2

    PrivateSubnet1RouteTableAssociation:
      Type: AWS::EC2::SubnetRouteTableAssociation
      Properties:
        RouteTableId:
          Ref: PrivateRouteTable
        SubnetId:
          Ref: PrivateSubnet1

    PrivateSubnet2RouteTableAssociation:
      Type: AWS::EC2::SubnetRouteTableAssociation
      Properties:
        RouteTableId:
          Ref: PrivateRouteTable
        SubnetId:
          Ref: PrivateSubnet2

  Outputs:
    Vpc: 
      Description: VPC
      Value:
        Ref: Vpc

    VpcDefaultSecurityGroup: 
      Description: VPC Default Security Group
      Value: !GetAtt Vpc.DefaultSecurityGroup

    Subnet1: 
      Description: Public Subnet ID 1
      Value:
        Ref: PublicSubnet1

    Subnet2:
      Description: Public Subnet ID 2
      Value:
        Ref: PublicSubnet2

    Subnet3: 
      Description: Private Subnet ID 1
      Value:
        Ref: PrivateSubnet1

    Subnet4:
      Description: Private Subnet ID 2
      Value:
        Ref: PrivateSubnet2

custom:
  prefix: ${self:service}-${self:provider.stage}